API documentation

running: `sbt run`, or `sbt "run <json file path>"`


HTTP(S):
send a 'GET' to localhost:8080/?start=<ISO8601>&stop=<ISO8601>&format=<json|xml>

for instance, running on localhost: 'http://localhost:8080/?start=2015-04-14T11:07:36.639Z&stop=2015-04-14T11:37:36.639Z&format=xml'


and you'll get either a json blob of the form '{rate:|rate as integer or "unavailable"|}' or an xml blob of the form '<rate>|rate as an integer or "unavailable"|</rate>, where '|' is used as a delimiter in those form definitions.

If you send non-ISO8601 compatible datetimes, you'll get back a 400 explaining what went wrong.

If you send non-implemented formats, you'll get back a json response

If you hit any other endpoint, you'll get back a 404 response

2. Protobufs: did not make the cut, but there's a .proto file in resources, and the architecture is laid out to handle them, but still made it into the design process. Frankly, it's a weekend and I'm not being paid to do this, so I'm not messing around with installing protoc and implementing a finagle codec for it.

